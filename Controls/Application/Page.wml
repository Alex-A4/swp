<html attr:lang="ru" attr:xml:lang="ru" attr:xmlns="http://www.w3.org/1999/xhtml" attr:key="_" attr:id="root"
      attr:component="Controls/Application"
      attr:class="{{ onServer && !isCompatible ? 'pre-load' : '' }}">
<Controls.Application._Head
   wsRoot="{{ wsRoot }}"
   linkResolver="{{ linkResolver }}"
   resourceRoot="{{ resourceRoot }}"
   appRoot="{{ appRoot }}"
   lite="{{lite}}"
   RUMEnabled="{{ RUMEnabled }}"
   pageName="{{ pageName }}"
   compat="{{ compat }}"
   head="{{ _options.head }}"
   title="{{ title }}"
   staticDomains="{{ staticDomains }}"
   buildnumber="{{ buildnumber }}"
   viewport="{{ _options.viewport }}"
   servicesPath="{{ servicesPath }}">
</Controls.Application._Head>
<Controls.Event.Registrator name="scrollDetect" register="scroll" attr:fixCompatible="1">
   <Controls.Event.Registrator name="resizeDetect" register="controlResize" attr:fixCompatible="1">
      <Controls.Event.Registrator name="mousemoveDetect" register="mousemove" attr:fixCompatible="1">
         <Controls.Event.Registrator name="mouseupDetect" register="mouseup" attr:fixCompatible="1">
            <Controls.Event.Registrator name="touchmoveDetect" register="touchmove" attr:fixCompatible="1">
               <Controls.Event.Registrator name="touchendDetect" register="touchend" attr:fixCompatible="1">
                  <Controls.Event.Registrator name="mousedownDetect" register="mousedown" attr:fixCompatible="1">
                     <Controls.Popup.Manager on:managerPopupCreated="_popupCreatedHandler()" on:managerPopupDestroyed="_popupDestroyedHandler()" stackRootWidth="{{_options.width}}">
                        <Controls.Application.TouchDetector name="touchDetector">
                           <Controls.DragNDrop.Container name="dragNDropContainer">
                              <body
                                 class="{{BodyClasses()}} {{_options.bodyClass}} {{_touchclass()}}"
                                 id="body"
                                 key="1_2_"
                                 on:scroll="_scrollPage()"
                                 on:resize="_resizePage()"
                                 on:mousemove="_mousemovePage()"
                                 on:touchmove="_touchmovePage()"
                                 on:touchend="_touchendPage()"
                                 on:mousedown="_mousedownPage()"
                                 on:mouseup="_mouseupPage()"
                                 on:openInfoBox="_openInfoBoxHandler()"
                                 on:closeInfoBox="_closeInfoBoxHandler()"
                                 on:keyPress="_keyPressHandler()"
                                 on:mouseup="_mouseupPage()"
                                 on:openPreviewer="_openPreviewerHandler()"
                                 on:cancelPreviewer="_cancelPreviewerHandler()"
                                 on:closePreviewer="_closePreviewerHandler()"
                                 on:suggestStateChanged="_suggestStateChangedHandler()">
                              <ws:if data="{{isCompatible}}">
                                 <div class="ws-focus-in"></div>
                              </ws:if>
                              <ws:if data="{{  _options.content }}">
                                 <Controls.Application._Wait>
                                    <ws:partial template="{{  _options.content }}" scope="{{ templateConfig }}"/>
                                 </Controls.Application._Wait>
                              </ws:if>
                              <ws:else>
                                 <Controls.Application._Wait content="">
                                 </Controls.Application._Wait>
                              </ws:else>

                              <ws:if data="{{ content.draggingTemplate }}">
                                 <ws:partial template="wml!Controls/DragNDrop/DraggingTemplateWrapper"
                                             draggingTemplateOptions="{{content.draggingTemplateOptions}}"
                                             draggingTemplate="{{content.draggingTemplate}}"/>
                              </ws:if>

                              <Controls.Popup.Manager.Container attr:id="popup"
                                                                eventHandler="{{content._managerEventHandler}}"/>

                              <ws:if data="{{ _options.scripts && _options.beforeScripts}}">
                                 <ws:for data="i in _options.scripts">
                                    <ws:partial template="{{ i }}"/>
                                 </ws:for>
                              </ws:if>
                              <script key="bundles" type="text/javascript"
                                      src="{{wsRoot}}ext/requirejs/bundles.js"></script>
                              <script key="require" type="text/javascript"
                                      src="/cdn/requirejs/2.3.5-p3/require-min.js"></script>
                              <script key="contents" type="text/javascript" src="{{ linkResolver.resolveLink('contents', 'js') }}"></script>
                              <script key="config" type="text/javascript"
                                      src="{{wsRoot}}ext/requirejs/config.js"></script>


                              <ws:if data="{{_options.builder && _options.builderCompatible}}">
                                 <ws:partial template="wml!Controls/Application/builderRunnerCompatible"
                                             _options="{{_options}}"/>
                              </ws:if>
                              <ws:if data="{{_options.builder && !_options.builderCompatible}}">
                                 <ws:partial template="wml!Controls/Application/builderRunner"
                                             _options="{{_options}}"/>
                              </ws:if>
                              <ws:else data="{{!_options.builderCompatible}}">
                                 <div>
                                    <Controls.Application._JsLinks attr:tabindex="-1"
                                                                   appRoot="{{ appRoot }}"
                                                                   linkResolver="{{ linkResolver }}"/>

                                    <!--
                                       beforeScripts - опция для переноса скриптов перед вставкой серверных скриптов
                                       то есть, потребовалась задача вставлять jquery до вставки скриптов, ведь они тут могут полезть в jquery
                                    /-->

                                    <ws:if data="{{ _options.scripts && !_options.beforeScripts }}">
                                       <ws:for data="i in _options.scripts">
                                          <ws:partial template="{{ i }}"/>
                                       </ws:for>
                                    </ws:if>
                                    <Controls.Application.startApplicationScript compat="{{compat}}" appRoot="{{ appRoot }}" onServer="{{ onServer }}"/>
                                 </div>
                              </ws:else>
                              <Controls.Popup.Opener.Previewer name="previewerOpener"/>
                              <ws:if data="{{ application && application.toLowerCase().indexOf('demo') === -1 }}">
                                 <Core.TimeTester resourceRoot="{{ resourceRoot }}"
                                                  RUMEnabled="{{ RUMEnabled }}"
                                                  pageName="{{ pageName }}" />
                              </ws:if>
                              <Controls.Popup.Opener.InfoBox name="infoBoxOpener"/>
                              <ws:if data="{{ themeChanging }}">
                                 <div id="theme-changing-overlay"></div>
                              </ws:if>
                              </body>
                           </Controls.DragNDrop.Container>
                        </Controls.Application.TouchDetector>
                     </Controls.Popup.Manager>
                  </Controls.Event.Registrator>
               </Controls.Event.Registrator>
            </Controls.Event.Registrator>
         </Controls.Event.Registrator>
      </Controls.Event.Registrator>
   </Controls.Event.Registrator>
</Controls.Event.Registrator>
</html>
