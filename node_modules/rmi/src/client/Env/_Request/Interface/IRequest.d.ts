import {
    IStorage
} from "Env/_Request/Interface/IStorage";
import {IConsole} from "Env/_Request/Interface/IConsole";
import {ILocation} from "Env/_Request/Interface/ILocation";
import {IStateReceiver} from "Env/_Request/Interface/IStateReceiver";

/**
 * Компонент, которые предоставляет в платформе доступ к синглтонам в раках запроса пользователя.
 */
export interface IRequest {
    location: ILocation;

    /**
     * Доступ к логгеру
     */
    console: IConsole;

    /**
     * Доступ к объекту сохранения состояния на сервиспе представлений,
     *  для его получения на клиенте. Не привязан к VDOM механизмам,
     *  поэтому можно будет его использовать в не визуальных компонентах.
     */
    stateReceiver: IStateReceiver;

    /**
     * Получение хранилища для сохранений данных в рамках запроса.
     * @param key Тип хранилища.
     */
    getStorage(key: any): IStorage;
}

export type RequestConfig = {
    stateReceiver: IStateReceiver;
    storageMap?: StorageMap;
    location: ILocation;
    console: IConsole;
}

export type StorageMap = {
    [propName: string]: IStorage;
}
export interface IRequestConstructor {
    new (config: RequestConfig): IRequest;
}
