import {ISerializableState} from "Env/_Request/Interface/ISerializableState";

/**
 * Инетрфейс компонента для сохранения состояний компонентов,
 * для его получения на клиенте. Не привязан к VDOM механизмам,
 * поэтому можно будет его использовать в не визуальных компонентах.
 * @interface
 * @name Core/Request/IStateReceiver
 */
export interface IStateReceiver {
    /**
     * Получеие сериализованного состояния всех зарегестрированных компонент
     * Используется для сохранения состояния страницы при построении на сервере
     * @return {String}
     */
    serialize(): string;
    
    /**
     * Метод, устанавливающий состояние всем зарегестрированным компонентам.
     * Используется при оживлении страницы после серверной вёрстки
     * @param {String} data
     */
    deserialize(data: string): void;
    
    /**
     * Регистрация компонентов, состояние которыех необходимо сохранить.
     * @param {String} uid идентификатор инстанса, для идентификации сохраненного для него состояния
     * @param {Core/Request/ISerializableState} component сериализируемый компонент
     */
    register(uid: string, component: ISerializableState): void;
    unregister(uid: string): void;
}
