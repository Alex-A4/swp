/// <amd-module name="SbisFile/Attach/Option/Getters/FileChooser" />
import ResourceGetter = require("File/Attach/Option/Getter");
import Chooser = require("SbisFile/ResourceGetter/FileChooser");

const GETTER_TYPE = "FileChooser";

/**
 * Класс конфигурации {@link File/IResourceGetter} для выбора из файловой системы,
 * по средствам "богатого окна выбора" {@link FileLoader/Chooser}, передаваемый в {@link File/ResourceGetter/Attach}
 * При недоступности FileChooser в проекте, будет сконфигурирован {@link File/ResourceGetter/FileSystem}
 * @class
 * @name SbisFile/Attach/Option/Getters/FileChooser
 * @extends File/Attach/Option/Getter
 * @public
 * @author Заляев А.В.
 */
class FileChooser extends ResourceGetter {
    /**
     * @cfg {Boolean} Доступен ли выбор сразу нескольких файлов
     * @name SbisFile/Attach/Option/Getters/FileChooser#multiSelect
     */
    /**
     * @cfg {Boolean} Доступны ли папки для выбора
     * @name SbisFile/Attach/Option/Getters/FileChooser#canChooseFolder
     */
    /**
     * @cfg {Boolean} Включен ли разбор отчетов
     * @name SbisFile/Attach/Option/Getters/FileChooser#reportReader
     */
    /**
     * @cfg {String} Путь, который будет выбран при открытии окна
     * <ul>
     * <li> desktop - рабочий стол </li>
     * <li> mycomputer - мой компьютер </li>
     * <li> mydocuments - мои документы </li>
     * <li> links - избранное (пункта нет в windows xp) </li>
     * <li> net - сеть </li>
     * </ul>
     * @name SbisFile/Attach/Option/Getters/FileChooser#folder
     */
    /**
     * @cfg {Array.<String>} Массив расширений, разрешенных для выбора, например ['exe','xml']
     * @name SbisFile/Attach/Option/Getters/FileChooser#extensions
     */
    /**
     * @cfg {Lib/Control/Control} parent Родительский модуль для открываемой панели выбора
     * @name SbisFile/Attach/Option/Getters/FileChooser#parent
     */
    /**
     * @cfg {"floatArea" | "dialog"} Режим отображения окна
     * @name SbisFile/Attach/Option/Getters/FileChooser#panelMode
     */
    /**
     * @cfg {String} Адрес сервиса для отображения форматных документов
     * @name SbisFile/Attach/Option/Getters/FileChooser#serviceUrl
     */
    /**
     * @cfg {String} Имя шаблона, отображаемого в шапке окна
     * @name SbisFile/Attach/Option/Getters/FileChooser#additionalTemplate
     */
    /**
     * @cfg {String} Доступные классы: FileChooser__SbisRu - окно адаптированное под sbis.ru
     * @name SbisFile/Attach/Option/Getters/FileChooser#className
     */
    /**
     * @param {Object} [options] Параметры вызова конструктора
     * @param {String | "desktop" | "mycomputer" | "mydocuments" | "links" | "net"} [options.folder]
     * Путь, который будет выбран при открытии окна
     * @param {Boolean} [options.canChooseFolder] Доступны ли папки для выбора
     * @param {Boolean} [options.multiSelect] Достпен ли выбор сразу нескольких файлов
     * @param {Boolean} [options.reportReader] Включен ли разбор отчетов, по умолчанию true
     * @param {Array.<String>} [options.extensions] Массив расширений, разрешенных для выбора, например ['exe','xml']
     * @param {Lib/Control/Control} [options.parent] Родительский модуль для открываемой панели выбора
     * @param {"floatArea" | "dialog"} [options.panelMode] Режим отображения окна
     * @param {String} [options.serviceUrl] Адрес сервиса для отображения форматных документов
     * @param {String} [options.additionalTemplate] Имя шаблона, отображаемого в шапке окна
     * @param {String} [options.className] Доступные классы: FileChooser__SbisRu - окно адаптированное под sbis.ru
     * @constructor
     * @see File/IResourceGetter
     * @see File/ResourceGetter/FileSystem
     * @see SbisFile/ResourceGetter/FileChooser
     */
    constructor (options?: any) {
        // @ts-ignore
        super (new Chooser(options || {}));
    }
    /**
     * @description
     * Тип геттера передается в метод choose File/Attach, чтобы указать каким способом(геттером) выбираются файлы
     * <pre>
     *   attach.choose(FileChooser.getType()); // Выезжающая панель выбора FileChooser
     * </pre>
     * @static
     * @method
     * @returns {String} Тип Getter'a
     */
    static getType() {
        return GETTER_TYPE;
    }
}
export = FileChooser;
