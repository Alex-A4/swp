/// <amd-module name="SbisFile/Attach/Option/Sources/Fabric" />

import SourceOption = require("File/Attach/Option/Source");

import FileTransferPlugin = require("SbisFile/Attach/Option/Sources/FileTransferPlugin");
import FileTransfer = require("SbisFile/Attach/Option/Sources/FileTransfer");
import SbisDiskPlugin = require("SbisFile/Attach/Option/Sources/SbisDiskPlugin");
import SbisDisk = require("SbisFile/Attach/Option/Sources/SbisDisk");
import SbisDiskDirectory = require("SbisFile/Attach/Option/Sources/SbisDiskDirectory");
import BLPlugin = require("SbisFile/Attach/Option/Sources/BLPlugin");
import BL = require("SbisFile/Attach/Option/Sources/BL");

interface sourceOptions {
    binding: {
        create: string
    };
    endpoint: {
        address: string,
        contract: string
    },
    idProperty: string
}

export = {
    /**
     * @typedef {Object} Endpoint
     * @property {String} contract Контракт - определяет доступные операции
     * @property {String} [address] Адрес - указывает место расположения сервиса,
     * к которому будет осуществлено подключение
     * @property {String} [moveContract=ПорядковыйНомер] Название объекта бл в которому принадлежат методы перемещения
     */
    /**
     * @typedef {Object} Binding
     * @property {String} [create]
     * @property {String} [read]
     * @property {String} [update]
     * @property {String} [query]
     * @property {String} [move]
     * @property {String} [copy]
     * @property {String} [merge]
     * @property {String} [destroy]
     */

    /**
     * @typedef sourceOptions
     * @property {Binding} binding
     * @property {Endpoint} endpoint
     * @property {String} idProperty
     */
    /**
     * @typedef {Object} sbisDiskOptions
     * @extends sourceOptions
     * @property {String} [catalog] Каталог для загрузки на сервис
     * @property {String} [serviceUrl] Адресс сервиса СБИС Диск
     */
    /**
     * @typedef {Object} FileTransferOptions
     * @extends sourceOptions
     * @property {String} storage Используемое хранилище
     * @property {String} serviceUrl Адрес сервиса FileTransfer
     * @see {@link https://online.sbis.ru/shared/disk/862e8a62-ff97-41b0-8311-29d4f87d1f3d}
     */
    /**
     * Получить набор опций для загрузки в СБИС Диск
     * @param {sbisDiskOptions} opt Параметр конфигурации ISource
     * @return {Array.<File/Attach/Option/Source>}
     */
    getSbisDiskSourceOptions(opt: sourceOptions): Array<SourceOption> {
        return [
            new SbisDiskPlugin(opt),
            new SbisDiskDirectory(opt),
            new SbisDisk(opt)
        ]
    },
    /**
     * Получить набор опций для загрузки на БЛ
     * @param {sourceOptions} opt Параметр конфигурации ISource
     * @return {Array.<File/Attach/Option/Source>}
     */
    getBLSourceOptions(opt: sourceOptions): Array<SourceOption> {
        return [
            new BL(opt),
            new BLPlugin(opt)
        ]
    },
    /**
     * Получить набор опций для загрузки в FileTransfer
     * @param {FileTransferOptions} opt Параметр конфигурации ISource
     * @return {Array.<File/Attach/Option/Source>}
     */
    getFileTransferSourceOptions(opt: sourceOptions): Array<SourceOption> {
        return [
            new FileTransferPlugin(opt),
            new FileTransfer(opt)
        ]
    }
}
