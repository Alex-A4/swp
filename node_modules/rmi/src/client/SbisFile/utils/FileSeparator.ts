/// <amd-module name="SbisFile/utils/FileSeparator" />

/**
 * Модуль позволяющий разделить исходный File/Blob на массив Blob определённой длинны
 * @private
 * @name SbisFile/utils/FileSeparator
 * @author Заляев А.В.
 */
class FileSeparator {
    private lastPart: number = 0; // указатель на конец последнего отданного куска
    constructor(
        private file: File | Blob, // Исходный файл
        private partSize: number // размер куска деления
    ) {}
    getNext(): Blob {
        /*if (!this.hasNext()) {
            throw new Error("File is empty");
        }*/
        let nextPart = this.lastPart + this.partSize;
        let blob = this.file.slice(this.lastPart, nextPart);
        this.lastPart = nextPart;
        return blob;
    }
    hasNext(): boolean {
        return this.lastPart <= this.file.size
    }
    reset() {
        this.lastPart = 0;
    }
    static split(file: Blob, size: number): Array<Blob> {
        let fileSeparator = new FileSeparator(file, size);

        let parts = [];
        while (fileSeparator.hasNext()) {
            parts.push(fileSeparator.getNext());
        }
        return parts;
    }
}

export = FileSeparator;
