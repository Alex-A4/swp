define('Deprecated/Controls/LoadingIndicator/Demo/MyLoadingIndicator/MyLoadingIndicator', [
   "Deprecated/core-attach",
   "Lib/Control/CompoundControl/CompoundControl",
   "html!Deprecated/Controls/LoadingIndicator/Demo/MyLoadingIndicator/MyLoadingIndicator",
   "Deprecated/Controls/Button/Button"
], function(cAttach, CompoundControl, dotTplFn) {
   /**
    * Deprecated/Controls/LoadingIndicator/Demo/MyLoadingIndicator/MyLoadingIndicator
    * @class Deprecated/Controls/LoadingIndicator/Demo/MyLoadingIndicator/MyLoadingIndicator
    * @extends Lib/Control/CompoundControl/CompoundControl
    * @control
    */
   var moduleClass = CompoundControl.extend(/** @lends Deprecated/Controls/LoadingIndicator/Demo/MyLoadingIndicator/MyLoadingIndicator.prototype */{
      _dotTplFn: dotTplFn,
      $protected: {
         _options: {
            
         }
      },
      $constructor: function() {
      },

      init: function() {
         moduleClass.superclass.init.call(this);
         this.getChildControlByName("Button 2").subscribe("onActivated", function(){
            cAttach.attachInstance('Lib/Control/LoadingIndicator/LoadingIndicator', {
               message: 'Сообщение',
               //устанавливаем режим наглядного отображения состояния загрузки
               progressBar: true
            }).addCallback(function (ind) {
               var progress = 0;
               var int = setInterval(function () {
                  //устанавливаем отображение изменения состояния индикатора с шагом в 25%
                  ind.setProgress((progress += 25));
                  //меняем сообщением индикатора - будем дублировать туда процентное состояние загрузки
                  ind.setMessage('Прогресс: ' + progress + '%');
               if (progress === 100) {
                  clearInterval(int);
                  ind.hide();
               } 
               //указываем интервал срабатывания функции - через каждые 0,5 секунды   
               }, 500);
            });   
         });
         this.getChildControlByName("Button").subscribe("onActivated", function(){
               //создаём индикатор загрузки
            cAttach.attachInstance('Lib/Control/LoadingIndicator/LoadingIndicator', {
               //указываем сообщение индикатора
               message: 'Ждите, идёт сохранение документа...'
            }).addCallback(function(ind){
               //настраиваем скрытие индикатора
               setTimeout(function(){
                  ind.hide();
               }, 3000);
            });
         });   
      }
   });
   return moduleClass;
});
