/**
 * Модуль "Компонент DialogConfirm".
 *
 * @description
 */
define("Deprecated/Controls/DialogConfirm/DialogConfirm", [
   "Core/core-merge",
   "Deprecated/Controls/SimpleDialogAbstract/SimpleDialogAbstract",
   "i18n!Deprecated/Controls/DialogConfirm/DialogConfirm"
], function(cMerge, SimpleDialogAbstract) {

   "use strict";

   /**
    * Конфирм диалог
    *
    * @class Deprecated/Controls/DialogConfirm/DialogConfirm
    * @extends Deprecated/Controls/SimpleDialogAbstract/SimpleDialogAbstract
    * @author Крайнов Д.О.
    * @public
    * @deprecated Используйте класс {@link SBIS3.CONTROLS/InformationPopup}.
    */
   var DialogConfirm = SimpleDialogAbstract.extend(/** @lends Deprecated/Controls/DialogConfirm/DialogConfirm.prototype */{
      /**
       * @event onConfirm Событие, происходящее в момент выбора действия для продолжения
       * @param {Core/EventObject} eventObject описание в классе Core/Abstract
       * @param {Boolean} result Результат конфирма
       */
      $protected: {
         _options: {
             /**
              * @cfg {Boolean} Изменить кнопку по умолчанию на другую
              * @example
              * <pre>
              *     <option name="invertDefaultButton">true</option>
              * </pre>
              * @remark
              * Кнопкой по умолчанию является кнопка с текстом "Нет".
              * Данная опция позволяет изменить кнопку по умолчанию на кнопку с текстом "Да".
              */
            invertDefaultButton: false,
            /**
             * @cfg {Boolean} Добавить ли кнопку "Отмена"
             * @example
             * <pre>
             *     <option name="useCancelButton">true</option>
             * </pre>
             */
            useCancelButton: false
         },
         _defaultButtonsConfig: [
            {
               tabindex : 2,
               width : "100%",
               height : "100%",
               name : "Yes",
               renderStyle: "classic",
               /**
                * @translatable
                */
               caption : rk("Да"),
               handlers: {
                  onActivated  : function(){
                     this.getParent().close(true);
                  }
               }
            },
            {
               tabindex : 1,
               width : "100%",
               height : "100%",
               name : "No",
               renderStyle: "classic",
               /**
                * @translatable
                */
               caption : rk("Нет"),
               defaultButton: true,
               handlers: {
                  onActivated  : function(){
                     this.getParent().close(false);
                  }
               }
            }
         ],
         _cancelButton: {
            tabindex : 3,
            width : "100%",
            height : "100%",
            name : "Cancel",
            renderStyle: "classic",
            caption : rk("Отмена"),
            handlers: {
               onActivated  : function(){
                  var parent = this.getParent();
                  parent.getOpener().onBringToFront(); //Фокус по autoHide уже мог уйти с панели, если нажимаем "отмену", то должны вернуть фокус
                  parent.close(undefined);  // если отмена, то возвращаем undefined
               }
            }
         }
      },
      $constructor : function(cfg){
         if (this._options.useCancelButton){
            this._defaultButtonsConfig.push(this._cancelButton);
         }
         this._options.buttons = cMerge(this._defaultButtonsConfig, cfg.buttons && cfg.buttons.length ? cfg.buttons : {});
         this._window.addClass('ws-smp-dlg-confirm');
         this._publish('onConfirm');
      },
      close: function(arg) {
         var result = typeof(arg) === 'boolean' ? arg : undefined; // если отмена, то возвращаем undefined
         this._notify('onConfirm', result);
         return DialogConfirm.superclass.close.apply(this, arguments);
      },
      _addButtons : function(){
         if(this._options.invertDefaultButton) {
            cMerge(this._options.buttons, [{
               tabindex:1,
               defaultButton:true
            }, {
               tabindex:2,
               defaultButton:false
            }]);
         }
         return DialogConfirm.superclass._addButtons.apply(this, arguments);
      }
   });

   return DialogConfirm;

});
