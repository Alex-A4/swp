/**
 * Created by as.suhoruchkin on 30.07.2015.
 */
define('Deprecated/Controls/OperationsPanelND/OperationsPanelND', [
   "Core/Deferred",
   "Deprecated/Controls/OperationsPanel/OperationsPanel",
   "html!Deprecated/Controls/OperationsPanelND/OperationsPanelND",
   "css!Deprecated/Controls/OperationsPanelND/OperationsPanelND",
   "i18n!Deprecated/Controls/OperationsPanelND/OperationsPanelND"
], function (cDeferred, OperationsPanel, dotTplFn) {

   "use strict";

   var OperationsPanelND = OperationsPanel.extend({
      _dotTplFn : dotTplFn,
      $protected: {
         _options: {
            hideCheckBoxes: true
         }
      },
      $constructor: function() {
         this._publish('onToggle', 'onChangeEnabled');
      },
      _panelAnimation: function() {
         var self = this;
         this._container.removeClass('ws-hidden');
         this._blocks.inner.animate({ 'margin-top': this._isOpen ? '-30px' : 0},
            {
               duration: 150,
               easing: 'linear',
               complete: function(){
                  self._container.toggleClass('ws-hidden', !self._isOpen);
                  self._toggleCheckBoxes();
                  self._notify('onToggle');
               }
            });
      },
      setLinkedView: function() {
         var
             self = this,
             result = OperationsPanelND.superclass.setLinkedView.apply(this, arguments);
         if (result instanceof cDeferred) {
            result.addCallback(function() {
               self._toggleCheckBoxes();
            });
         } else {
            this._toggleCheckBoxes();
         }

      },
      _toggleCheckBoxes: function() {
         var linkedView = this.getCurrentView();
         if (linkedView && this._options.hideCheckBoxes && linkedView._needShowSelectionCheckbox()) {
            linkedView._container.toggleClass('ws-DataViewAbstract__showCheckBoxes', this.isOpen())
               .toggleClass('ws-DataViewAbstract__hideCheckBoxes', !this.isOpen());
         }
      },
      _toggleSelection: function() {
         this._toggleCheckBoxes();
         OperationsPanelND.superclass._toggleSelection.apply(this, arguments);
      },
      _toogleAndEnabled: function(enabled) {
         OperationsPanelND.superclass._toogleAndEnabled.apply(this, arguments);
         this._notify('onChangeEnabled');
      },
      //Перебиваем функции OperationsPanel, которые не должны выполняться
      _cutWrapper: function() {},
      _toggleOnChangeSelection: function() {},
      _startTrackWrapper: function() {},
      _stopTrackWrapper: function() {},
      _closeAfterDelete: function() {},
      requireButtons: function() {
         return cDeferred.success();
      }
   });

   return OperationsPanelND;
});