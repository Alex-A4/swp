define('Deprecated/TransportAdapterAbstract', [
   'Core/core-extend'
], function(coreExtend) {
   var TransportAdapterAbstract;

   /**
    * Абстрактный класс-адаптер
    *
    * @class Deprecated/TransportAdapterAbstract
    * @author Бегунов А.В.
    * @public
    * @deprecated
    */
   TransportAdapterAbstract = coreExtend.extend({}, /** @lends Deprecated/TransportAdapterAbstract.prototype */{
      /**
       * @returns {Core/Deferred}
       */
      list: function(args) {
         throw new Error("TransportAdapterAbstract::list must be implemented");
      },
      create: function(args) {
         throw new Error("TransportAdapterAbstract::create must be implemented");
      },
      update: function(args) {
         throw new Error("TransportAdapterAbstract::update must be implemented");
      },
      merge: function(args) {
         throw new Error("TransportAdapterAbstract::merge must be implemented");
      },
      copy: function(args) {
         throw new Error("TransportAdapterAbstract::copy must be implemented");
      },
      destroy: function(args) {
         throw new Error("TransportAdapterAbstract::destroy must be implemented");
      },
      read: function(args) {
         throw new Error("TransportAdapterAbstract::read must be implemented");
      },
      /**
       * Прерывает загрузку
       */
      abort: function() {
         throw new Error("TransportAdapterAbstract::abort must be implemented");
      }
   });

   return TransportAdapterAbstract;
});