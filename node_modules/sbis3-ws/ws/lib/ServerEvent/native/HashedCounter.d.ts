import { SEB } from "../interfaces";
/**
 * Класс, который считает хэшированыне объекты и хранит одну копию
 */
declare class HashedCounter<T extends SEB.IHashedSub> {
    private counter;
    /**
     * Храним только одну копию <T>
     */
    private list;
    constructor(countClones?: boolean);
    /**
     * Добавляем подписку, если её нет и увеличиваем счётчик
     * @param {SEB.IHashedSub} item
     */
    add(item: T): void;
    /**
     * Добавляем подписку, если её нет и устанавливаем счётчик в единицу
     * @param {SEB.IHashedSub} item
     */
    private addWithoutCount(item);
    remove(item: T): void;
    has(item: T): boolean;
    getSubscribes(): T[];
    getByName(name: string): T[];
    getCount(item: T): number;
    clear(): void;
}