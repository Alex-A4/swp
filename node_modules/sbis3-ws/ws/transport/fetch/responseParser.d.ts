/**
 * @typedef {Object}
 * @name Transport/fetch/ResponseTypes
 * @property TEXT
 * @property BLOB
 * @property JSON
 * @property XML
 */
export type FetchResponseTypes = {
    'TEXT': string;
    'BLOB': Blob;
    'JSON': object;
    'XML': Document;
}

/**
 * @typedef {"TEXT" | "BLOB" | "JSON" | "XML"}
 * @name Transport/fetch/ResponseType
 */
export type FetchResponseType = keyof FetchResponseTypes;

/**
 * Набор типов данных, в которые можно преобразовать ответ от сервера.
 * @type {Object}
 * @property TEXT
 * @property JSON
 * @property BLOB
 * @property XML
 * @name Transport/fetch/responseParser#RESPONSE_TYPE
 */
export const RESPONSE_TYPE: {
    [propName in FetchResponseType]: FetchResponseType
}

/**
 * Разбор ответа от сервера
 * @param {Response} response Ответ сервера
 * @param {Transport/fetch/ResponseType} type Ожидаемый тип
 * @return {Promise}
 * @name Transport/fetch/responseParser#parse
 */
export let parse: <T = string>(response: Response, type: FetchResponseType) => Promise<T>
