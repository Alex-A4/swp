import {HttpMethod, AbortPromise} from "Transport/fetch.d";

/**
 * @typedef {Object}
 * @name Transport/RPC/Config
 * @property {String} method RPC метод запроса
 * @property {Object} [body] Тело запроса
 * @property {String} url Адрес сервиса
 * @property {Object} [headers] Объект заголовков запроса
 * @property {Boolean} asyncInvoke
 * @property {Boolean} recent
 */
export type RPCConfig = {
    method: string;
    body?: object;
    url: string;
    headers?: object;
    asyncInvoke?: boolean;
    recent?: boolean;
    
    fallback?: boolean;
}

export type HeadersParam = {
    fallback?: boolean;
    asyncInvoke?: boolean;
    url: string;
    recent?: boolean;
    method: string;
    httpMethod?: HttpMethod;
    headers?: object;
}

export type RPCResponse<T> = {
    error?: {
        message: string,
        code: string,
        details: string
    }
    result?: T
}

export type RPCTransport = <T = any>(config: RPCConfig) => AbortPromise<T>
