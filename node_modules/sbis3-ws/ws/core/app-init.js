define('Core/app-init',
[
   'Core/load-contents',
   'Core/core-merge',
   'Core/constants',
   'Core/Themes/ThemesController',
   'native-css',
   'Core/patchRequireJS',
   'Core/polyfill',
   'Core/polyfill/PromiseAPIDeferred',
   'Core/ConsoleLogger'
], function(
   loadContents,
   cMerge,
   _const,
   ThemesController,
   nativeCss,
   patchRequireJS
) {
   'use strict';

   patchRequireJS();

   function filterNone() {
      return NodeFilter.FILTER_ACCEPT;
   }

   function getAllComments(rootElem) {
      var comments = [];
      // Fourth argument, which is actually obsolete according to the DOM4 standard, is required in IE 11
      var iterator = document.createNodeIterator(rootElem, NodeFilter.SHOW_COMMENT, filterNone, false);
      var curNode = iterator.nextNode();
      while (curNode) {
         comments.push(curNode);
         curNode = iterator.nextNode();
      }
      return comments;
   }

   function parseTheme(path) {
      var splitted = path.split('theme?');
      var res;
      if(splitted.length > 1) {
         res = {
            name: splitted[1],
            hasTheme: true
         };
      } else {
         res = {
            name: path,
            hasTheme: false
         };
      }
      return res;
   }

   if (window.themesActive) {
      nativeCss.load = function (path, require, load, conf) {
         var parseInfo = parseTheme(path);
         if(parseInfo.hasTheme) {
            if(ThemesController.getInstance().pushCssThemedAsyncAllThemes) {
               ThemesController.getInstance().pushCssThemedAsyncAllThemes(parseInfo.name.replace(/\.css$/, ''), load);
            }
            ThemesController.getInstance().pushThemedCss(parseInfo.name.replace(/\.css$/, ''));
         } else {
            if(ThemesController.getInstance().pushCssAsync) {
               ThemesController.getInstance().pushCssAsync(path.replace(/\.css$/, ''), load);
            }
            ThemesController.getInstance().pushSimpleCss(path.replace(/\.css$/, ''));
         }
         load(null);
      };
   } else {
      var loadOrigin = nativeCss.load;
      nativeCss.load = function(path, require, load, conf) {
         var fixedCssName = path;
         if(~fixedCssName.indexOf('theme?')) {
            fixedCssName = fixedCssName.replace('theme?', '');
         }
         return loadOrigin(fixedCssName, require, load, conf);
      };
   }


   return function() {
      cMerge(_const, window.wsConfig || {}, { rec: false });

      //TODO: убрать этот костыль когда Дима пофиксит ошибку https://online.sbis.ru/opendoc.html?guid=a7c9a632-f24e-44e2-9a53-285879d789b1
      getAllComments(document.body).forEach(function(elem) {
         elem.parentNode.removeChild(elem);
      });


      loadContents(window.contents, false, {
         resources: wsConfig.resourceRoot
      });
   };
});