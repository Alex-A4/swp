/**
 * Created by rn.kondakov on 20.08.2018.
 */
define('Core/HtmlJson/linkWrapResolver', [
   'Core/helpers/String/linkWrap'
], function(linkWrap) {
   'use strict';

   /**
    * Module with a resolver function, wrapping links in Core/HtmlJson.
    * <br />
    * Should be used in tagResolver option of Core/HtmlJson.
    *
    * @class Core/HtmlJson/linkWrapResolver
    * @author Кондаков Р.Н.
    * @function
    * @param json - Original json node (based on JsonML).
    * @returns Resolved json node.
    */

   var flag = '%MarkedByLinkWrap%',
      flagRegExp = new RegExp(flag, 'g');

   function mark(json) {
      if (typeof json === 'string') {
         // Mark non-empty string.
         return json && flag + json;
      }
      if (!Array.isArray(json)) {
         // No need to touch attributes.
         return json;
      }

      // There is some problems in highlight and linkwrap resolvers together without this if.
      // No need in new version of HtmlJson in 3.18.710, Controls/Decorator/Markup.
      if (!json[0] && json.length === 2 && typeof json[1] === 'string') {
         return json[1];
      }

      // No need to mark json[0], this is a tag name.
      var markedJson = [json[0]];
      for (var i = 1; i < json.length; ++i) {
         markedJson[i] = mark(json[i]);
      }
      return markedJson;
   }

   function unmark(json) {
      return json.replace(flagRegExp, '');
   }

   return function linkWrapResolver(json) {
      if (typeof json !== 'string' || json === '') {
         return json[0] === 'a' ? mark(json) : json;
      }
      if (~json.indexOf(flag)) {
         return unmark(json);
      }
      return mark(linkWrap.wrapURLs(json, true, true));
   };
});
