(function() {
   var global = (function(){ return this || (0,eval)('this'); }());
   var define = global.define || (global.requirejs && global.requirejs.define) || (requirejsVars && requirejsVars.define);

   define('remote', [
      'Core/multiService',
      'Core/IoC',
      'text'
   ], function(
      multiService,
      IoC
   ) {
      'use strict';

      function getServiceAndModule(name) {
         var serviceAndModule = name.split('?');
         var service = serviceAndModule[1] ? serviceAndModule.shift() : '';
         var module = serviceAndModule.join('?');

         return {
            service: service,
            module: module
         };
      }

      return {
         // Plugin's main entry point
         load: function (name, require, onLoad) {
            var start = new Date().getTime();
            var logger = IoC.resolve('ILogger');
            var data = getServiceAndModule(name);

            if (!data.service) {
               onLoad.error('Remote service is not found!');
               return;
            }

            multiService.loadService(data.service).then(function() {
               require([data.module], function (result) {
                  if (logger && typeof logger.debug === 'function') {
                     logger.debug('REMOTE', 'Module %s l–æaded from remote service %s for %d ms', data.module, url, (new Date().getTime()) - start);
                  }
                  onLoad(result);
               }, function (err) {
                  onLoad.error(err);
               });
            }).catch(function (err) {
               onLoad.error(err);
            });
         },

         // Removes mark that service was loaded or all of the services were loaded
         resetService: function(service) {
            multiService.unloadService(service);
         }
      }
   });
})();
